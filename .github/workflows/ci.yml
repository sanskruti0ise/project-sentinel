name: CI-CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Test with simple API health check (placeholder)
      run: |
        # This is a placeholder for actual tests.
        # For a real project, you would run pytest here.
        echo "Tests would run here. For now, we'll just check if the app starts."
        # We can't start a server in CI easily without more setup,
        # so this step is illustrative. A linter would be a good real-world test.
        pip install ruff
        ruff check .

  build-docker-image:
    # This job only runs after build-and-test succeeds
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          # Example tag: ghcr.io/YOUR_GITHUB_USERNAME/project-sentinel:latest
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}


